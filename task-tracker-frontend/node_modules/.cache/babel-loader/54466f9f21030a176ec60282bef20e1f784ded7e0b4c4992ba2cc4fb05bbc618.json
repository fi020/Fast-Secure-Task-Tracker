{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    token: localStorage.getItem('token') || '',\n    user: {}\n  },\n  mutations: {\n    auth_success(state, token) {\n      state.token = token;\n    },\n    logout(state) {\n      state.token = '';\n    }\n  },\n  actions: {\n    login({\n      commit\n    }, user) {\n      return new Promise((resolve, reject) => {\n        axios({\n          url: 'http://localhost:3000/auth/login',\n          data: user,\n          method: 'POST'\n        }).then(resp => {\n          const token = resp.data.access_token;\n          localStorage.setItem('token', token);\n          commit('auth_success', token);\n          resolve(resp);\n        }).catch(err => {\n          localStorage.removeItem('token');\n          reject(err);\n        });\n      });\n    },\n    logout({\n      commit\n    }) {\n      return new Promise(resolve => {\n        commit('logout');\n        localStorage.removeItem('token');\n        resolve();\n      });\n    }\n  },\n  getters: {\n    isLoggedIn: state => !!state.token\n  }\n});","map":{"version":3,"names":["Vue","Vuex","axios","use","Store","state","token","localStorage","getItem","user","mutations","auth_success","logout","actions","login","commit","Promise","resolve","reject","url","data","method","then","resp","access_token","setItem","catch","err","removeItem","getters","isLoggedIn"],"sources":["/workspaces/Fast-Secure-Task-Tracker/task-tracker-frontend/src/store/index.js"],"sourcesContent":["import Vue from 'vue';\r\nimport Vuex from 'vuex';\r\nimport axios from 'axios';\r\n\r\nVue.use(Vuex);\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    token: localStorage.getItem('token') || '',\r\n    user: {},\r\n  },\r\n  mutations: {\r\n    auth_success(state, token) {\r\n      state.token = token;\r\n    },\r\n    logout(state) {\r\n      state.token = '';\r\n    },\r\n  },\r\n  actions: {\r\n    login({ commit }, user) {\r\n      return new Promise((resolve, reject) => {\r\n        axios({ url: 'http://localhost:3000/auth/login', data: user, method: 'POST' })\r\n          .then(resp => {\r\n            const token = resp.data.access_token;\r\n            localStorage.setItem('token', token);\r\n            commit('auth_success', token);\r\n            resolve(resp);\r\n          })\r\n          .catch(err => {\r\n            localStorage.removeItem('token');\r\n            reject(err);\r\n          });\r\n      });\r\n    },\r\n    logout({ commit }) {\r\n      return new Promise(resolve => {\r\n        commit('logout');\r\n        localStorage.removeItem('token');\r\n        resolve();\r\n      });\r\n    },\r\n  },\r\n  getters: {\r\n    isLoggedIn: state => !!state.token,\r\n  },\r\n});\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,OAAO;AAEzBF,GAAG,CAACG,GAAG,CAACF,IAAI,CAAC;AAEb,eAAe,IAAIA,IAAI,CAACG,KAAK,CAAC;EAC5BC,KAAK,EAAE;IACLC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;IAC1CC,IAAI,EAAE,CAAC;EACT,CAAC;EACDC,SAAS,EAAE;IACTC,YAAYA,CAACN,KAAK,EAAEC,KAAK,EAAE;MACzBD,KAAK,CAACC,KAAK,GAAGA,KAAK;IACrB,CAAC;IACDM,MAAMA,CAACP,KAAK,EAAE;MACZA,KAAK,CAACC,KAAK,GAAG,EAAE;IAClB;EACF,CAAC;EACDO,OAAO,EAAE;IACPC,KAAKA,CAAC;MAAEC;IAAO,CAAC,EAAEN,IAAI,EAAE;MACtB,OAAO,IAAIO,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACtChB,KAAK,CAAC;UAAEiB,GAAG,EAAE,kCAAkC;UAAEC,IAAI,EAAEX,IAAI;UAAEY,MAAM,EAAE;QAAO,CAAC,CAAC,CAC3EC,IAAI,CAACC,IAAI,IAAI;UACZ,MAAMjB,KAAK,GAAGiB,IAAI,CAACH,IAAI,CAACI,YAAY;UACpCjB,YAAY,CAACkB,OAAO,CAAC,OAAO,EAAEnB,KAAK,CAAC;UACpCS,MAAM,CAAC,cAAc,EAAET,KAAK,CAAC;UAC7BW,OAAO,CAACM,IAAI,CAAC;QACf,CAAC,CAAC,CACDG,KAAK,CAACC,GAAG,IAAI;UACZpB,YAAY,CAACqB,UAAU,CAAC,OAAO,CAAC;UAChCV,MAAM,CAACS,GAAG,CAAC;QACb,CAAC,CAAC;MACN,CAAC,CAAC;IACJ,CAAC;IACDf,MAAMA,CAAC;MAAEG;IAAO,CAAC,EAAE;MACjB,OAAO,IAAIC,OAAO,CAACC,OAAO,IAAI;QAC5BF,MAAM,CAAC,QAAQ,CAAC;QAChBR,YAAY,CAACqB,UAAU,CAAC,OAAO,CAAC;QAChCX,OAAO,CAAC,CAAC;MACX,CAAC,CAAC;IACJ;EACF,CAAC;EACDY,OAAO,EAAE;IACPC,UAAU,EAAEzB,KAAK,IAAI,CAAC,CAACA,KAAK,CAACC;EAC/B;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}