{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'TaskForm',\n  data() {\n    return {\n      title: '',\n      description: '',\n      alertMessage: '',\n      alertClass: ''\n    };\n  },\n  methods: {\n    async addTask() {\n      try {\n        await axios.post('/tasks', {\n          title: this.title,\n          description: this.description\n        }, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        this.alertMessage = 'Task added successfully!';\n        this.alertClass = 'success';\n        this.$emit('task-added');\n        this.title = '';\n        this.description = '';\n      } catch (error) {\n        this.alertMessage = 'Failed to add task. Please try again.';\n        this.alertClass = 'error';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","title","description","alertMessage","alertClass","methods","addTask","post","headers","Authorization","localStorage","getItem","$emit","error"],"sources":["src/components/TaskForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"task-form\">\r\n    <form @submit.prevent=\"addTask\">\r\n      <input v-model=\"title\" placeholder=\"Task Title\" />\r\n      <input v-model=\"description\" placeholder=\"Task Description\" />\r\n      <button type=\"submit\">Add Task</button>\r\n    </form>\r\n    <div v-if=\"alertMessage\" :class=\"['alert', alertClass]\">{{ alertMessage }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'TaskForm',\r\n  data() {\r\n    return {\r\n      title: '',\r\n      description: '',\r\n      alertMessage: '',\r\n      alertClass: ''\r\n    };\r\n  },\r\n  methods: {\r\n    async addTask() {\r\n      try {\r\n        await axios.post('/tasks', {\r\n          title: this.title,\r\n          description: this.description,\r\n        }, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          },\r\n        });\r\n        this.alertMessage = 'Task added successfully!';\r\n        this.alertClass = 'success';\r\n        this.$emit('task-added');\r\n        this.title = '';\r\n        this.description = '';\r\n      } catch (error) {\r\n        this.alertMessage = 'Failed to add task. Please try again.';\r\n        this.alertClass = 'error';\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.task-form {\r\n  background: #1e1e1e;\r\n  color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  max-width: 400px;\r\n  margin: auto;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\ninput {\r\n  background-color: #333;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px;\r\n  margin: 10px 0;\r\n  border-radius: 5px;\r\n  width: 100%;\r\n}\r\n\r\nbutton {\r\n  background-color: #444;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  width: 100%;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #555;\r\n}\r\n\r\n.alert {\r\n  margin-top: 20px;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  width: 100%;\r\n  text-align: center;\r\n}\r\n\r\n.success {\r\n  background-color: #4caf50;\r\n  color: white;\r\n}\r\n\r\n.error {\r\n  background-color: #f44336;\r\n  color: white;\r\n}\r\n</style>\r\n"],"mappings":"AAYA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,WAAA;MACAC,YAAA;MACAC,UAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,QAAA;MACA;QACA,MAAAR,KAAA,CAAAS,IAAA;UACAN,KAAA,OAAAA,KAAA;UACAC,WAAA,OAAAA;QACA;UACAM,OAAA;YACAC,aAAA,YAAAC,YAAA,CAAAC,OAAA;UACA;QACA;QACA,KAAAR,YAAA;QACA,KAAAC,UAAA;QACA,KAAAQ,KAAA;QACA,KAAAX,KAAA;QACA,KAAAC,WAAA;MACA,SAAAW,KAAA;QACA,KAAAV,YAAA;QACA,KAAAC,UAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}